{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n  constructor(coords, distance, duration) {\n    this.coords = coords; // [lat, lng]\n    this.distance = distance; // in km\n    this.duration = duration; // in min\n  }\n\n  _setDescription(type) {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${type[0].toUpperCase()}${type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n}\n\nclass Running extends Workout {\n  type = 'running';\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription(this.type);\n  }\n\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = 'cycling';\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration);\n    this.elevationGain = elevationGain;\n    this.calcSpeed();\n    this._setDescription(this.type);\n  }\n\n  calcSpeed() {\n    // km/h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n////////////////////////////////////////////////////////////\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst formInputs = document.querySelectorAll('.form__input');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\nconst workoutsList = document.querySelector('.workouts__list');\nconst clearAll = document.querySelector('.clear__all');\n// const editBtn = document.querySelector('.edit__btn');\n\n// CHECKPOINT:\n// APPLICATION ARHITECTURE\nclass App {\n  #data;\n  #map;\n  #mapEvent;\n  #mapZoomLevel = 13;\n  #workouts = [];\n  #markers = [];\n  #htmlContent = [];\n  #isEditing = false;\n  #index;\n  constructor() {\n    this._getLocalStorage();\n\n    this._getPosition();\n    this._showClearAll();\n    form.addEventListener('submit', this._creatingNewWorkout.bind(this));\n    inputType.addEventListener('change', this._toggleElevationField);\n    containerWorkouts.addEventListener('click', this._moveToMap.bind(this));\n    workoutsList.addEventListener('click', this._deleteWorkout.bind(this));\n    workoutsList.addEventListener('click', this._editWorkout.bind(this));\n    clearAll.addEventListener('click', this._clearWorkouts.bind(this));\n\n    this._indexDelegation();\n\n    // document.querySelector('.show__all').addEventListener('click', this._showAllMarkers.bind(this));\n  }\n\n  // CHECKPOINT:\n\n  _getPosition() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this._loadMap.bind(this), function () {\n        alert('Cannot acces your position!');\n      });\n    }\n  }\n\n  _indexDelegation() {\n    workoutsList.querySelectorAll('.edit__btn').forEach((btn, i) =>\n      btn.addEventListener(\n        'click',\n        function () {\n          // invert index\n          this.#index = Math.abs(i - (this.#htmlContent.length - 1));\n        }.bind(this)\n      )\n    );\n  }\n\n  _loadMap(position) {\n    const { latitude, longitude } = position.coords;\n    const coords = [latitude, longitude];\n\n    // Leaflet library\n    this.#map = L.map('map').setView(coords, 13);\n\n    L.tileLayer('https://tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    this.#map.on('click', this._showForm.bind(this));\n    this.#map.on('click', this._toggleEditing.bind(this, false));\n    this.#map.on('click', this._clearAllSelected);\n\n    this.#workouts.forEach(work => this._renderWorkoutMarker(work));\n  }\n\n  // _showAllMarkers() {\n  //   const bounds = new L.LatLngBounds();\n\n  //   bounds.extend(this.#markers.getLatLng());\n\n  //   this.#map.fitBounds(bounds);\n  // }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    inputDistance.value = inputDuration.value = inputCadence.value = inputElevation.value = '';\n\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  // Switching from running to cycling\n  _toggleElevationField() {\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n\n  _clearAllSelected() {\n    document.querySelectorAll('.workout').forEach(work => {\n      work.classList.remove('editing__active');\n      work.classList.remove('selected__active');\n    });\n\n    inputType.value = 'running';\n    inputDistance.value = inputDuration.value = inputCadence.value = inputElevation.value = '';\n\n    inputCadence.closest('.form__row').classList.remove('form__row--hidden');\n    inputElevation.closest('.form__row').classList.add('form__row--hidden');\n  }\n\n  _toggleEditing(bool) {\n    this.#isEditing = bool;\n    inputType.disabled = bool;\n  }\n\n  _creatingNewWorkout(e) {\n    e.preventDefault();\n\n    if (!this.#isEditing) {\n      this._newWorkout();\n    } else {\n      this._editSubmit();\n    }\n  }\n\n  _newWorkout() {\n    // Check for form activity\n    if (form.classList.contains('hidden')) return;\n\n    const isInputValid = (...inputs) => inputs.every(inp => Number.isFinite(inp));\n    const isPositive = (...inputs) => inputs.every(inp => inp >= 1);\n\n    // Get data from input\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let workout;\n\n    // If type running, create running object\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n      // Check is data is valid\n      if (!isInputValid(distance, duration, cadence) || !isPositive(distance, duration, cadence))\n        return alert('Data needs to be positive numbers!');\n\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n\n    // If type cycling, create cyclying object\n    if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n      // Check is data is valid\n      if (!isInputValid(distance, duration, elevation) || !isPositive(distance, duration))\n        return alert('Data needs to be positive numbers!');\n\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n\n    // Push workout to workouts array\n    this.#workouts.push(workout);\n\n    // Display marker on map\n    this._renderWorkoutMarker(workout);\n\n    // Display workout on list\n    this._renderWorkout(workout);\n\n    // Check for clear all\n    this._showClearAll();\n\n    // Data local storage\n    this._setLocalStorage();\n\n    // Clear form + input fields\n    this._hideForm();\n    console.log(this.#workouts);\n  }\n\n  // Show workout marker on map\n  _renderWorkoutMarker(workout) {\n    let mark = L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(workout.description)\n      .openPopup();\n    this.#markers.push(mark);\n  }\n\n  // Show workout on list after completing form\n  _renderWorkout(workout) {\n    let html = `\n    <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n    <span class=\"close__btn\">&times;</span>\n    <span class=\"edit__btn\">&#9998;</span>\n      <h2 class=\"workout__title\">${workout.description}</h2>\n        <div class=\"workout__details\">\n        \n          <span class=\"workout__icon\">${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'}</span>\n          <span class=\"workout__value distance__value\">${workout.distance}</span>\n          <span class=\"workout__unit\">km</span>\n          \n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⏱</span>\n          <span class=\"workout__value duration__value\">${workout.duration}</span>\n          <span class=\"workout__unit\">min</span>\n        </div>\n          `;\n\n    if (workout.type === 'running') {\n      html += `\n      <div class=\"workout__details\">\n        <span class=\"workout__icon\">🦶🏼</span>\n        <span class=\"workout__value cadence__value\">${workout.cadence}</span>\n        <span class=\"workout__unit\">spm</span>\n      </div>\n      <div class=\"workout__details\">\n        <span class=\"workout__icon\">⚡️</span>\n        <span class=\"workout__value pace__value\">${Math.trunc(workout.pace)}</span>\n        <span class=\"workout__unit\">min/km</span>\n      </div>\n    </li>\n      `;\n    }\n\n    if (workout.type === 'cycling') {\n      html += `\n      <div class=\"workout__details\">\n        <span class=\"workout__icon\">⛰</span>\n        <span class=\"workout__value elevationGain__value\">${workout.elevationGain}</span>\n        <span class=\"workout__unit\">m</span>\n      </div>\n      <div class=\"workout__details\">\n        <span class=\"workout__icon\">⚡️</span>\n        <span class=\"workout__value speed__value\">${Math.trunc(workout.speed)}</span>\n        <span class=\"workout__unit\">km/h</span>\n      </div>\n        \n    </li>\n      `;\n    }\n    this.#htmlContent.push(html);\n    workoutsList.insertAdjacentHTML('afterbegin', html);\n\n    this._indexDelegation();\n  }\n\n  // Move to map marker when clicking workout from list\n  _moveToMap(e) {\n    const workoutEl = e.target.closest('.workout');\n\n    // guard clause\n    if (!workoutEl || e.target.closest('.edit__btn')) return;\n\n    const workout = this.#workouts.find(work => work.id === workoutEl.dataset.id);\n\n    if (!workout) return;\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    });\n\n    // Clear form + input fields\n    this._hideForm();\n\n    // clear all workouts in editing and selected mode\n    this._clearAllSelected();\n    workoutEl.classList.add('selected__active');\n  }\n\n  // Delete workout by 'x' button\n  _deleteWorkout(e) {\n    const workoutEl = e.target.closest('.close__btn');\n\n    if (!workoutEl) return;\n\n    const workout = this.#workouts.find(work => work.id === workoutEl.closest('.workout').dataset.id);\n\n    if (!workout) return;\n\n    const index = this.#workouts.findIndex(work => work.id === workout.id);\n\n    // remove workout from list\n    this.#workouts.splice(index, 1);\n    this.#htmlContent.splice(index, 1);\n\n    workoutsList.innerHTML = '';\n\n    this.#htmlContent.slice().forEach(html => {\n      workoutsList.insertAdjacentHTML('afterbegin', html);\n    });\n\n    // remove marker from map and array\n    this.#map.removeLayer(this.#markers[index]);\n    this.#markers.splice(index, 1);\n\n    // Check for clear all\n    this._showClearAll();\n\n    // hide from\n    this._hideForm();\n\n    this._indexDelegation();\n\n    // remove from local storage\n    this._setLocalStorage();\n  }\n\n  // Edit existing workout on list\n  _editWorkout(e) {\n    const editEl = e.target.closest('.edit__btn');\n\n    if (!editEl) return;\n\n    // clear all workouts in editing mode\n    this._clearAllSelected();\n    const workout = e.target.closest('.workout');\n    workout.classList.add('editing__active');\n\n    this._showForm();\n\n    this._toggleEditing(true);\n\n    const content = this.#htmlContent[this.#index];\n    const parse = new DOMParser();\n    const html = parse.parseFromString(content, 'text/html').querySelector('.workout');\n\n    if (html.classList.contains('workout--running')) {\n      inputType.value = 'running';\n      inputDistance.value = this.#workouts[this.#index].distance;\n      inputDuration.value = this.#workouts[this.#index].duration;\n      inputCadence.value = this.#workouts[this.#index].cadence;\n      inputCadence.closest('.form__row').classList.remove('form__row--hidden');\n      inputElevation.closest('.form__row').classList.add('form__row--hidden');\n    } else {\n      inputType.value = 'cycling';\n      inputDistance.value = this.#workouts[this.#index].distance;\n      inputDuration.value = this.#workouts[this.#index].duration;\n      inputElevation.value = this.#workouts[this.#index].elevationGain;\n      inputCadence.closest('.form__row').classList.add('form__row--hidden');\n      inputElevation.closest('.form__row').classList.remove('form__row--hidden');\n    }\n  }\n\n  _editSubmit() {\n    const content = this.#htmlContent[this.#index];\n    const work = this.#workouts[this.#index];\n\n    // Convert text to html, for accesing data by class\n    const parse = new DOMParser();\n    const html = parse.parseFromString(content, 'text/html').querySelector('.workout');\n\n    const isInputValid = (...inputs) => inputs.every(inp => Number.isFinite(inp));\n    const isPositive = (...inputs) => inputs.every(inp => inp >= 1);\n\n    html.querySelector('.distance__value').textContent = inputDistance.value;\n    html.querySelector('.duration__value').textContent = inputDuration.value;\n\n    if (html.classList.contains('workout--running')) {\n      if (\n        !isInputValid(+inputDistance.value, +inputDuration.value, +inputCadence.value) ||\n        !isPositive(+inputDistance.value, +inputDuration.value, +inputCadence.value)\n      )\n        return alert('Data needs to be positive numbers!');\n      work.distance = +inputDistance.value;\n      work.duration = +inputDuration.value;\n      work.cadence = +inputCadence.value;\n      const calcPace = Math.trunc(inputDuration.value / inputDistance.value);\n      work.pace = calcPace;\n\n      html.querySelector('.cadence__value').textContent = inputCadence.value;\n      html.querySelector('.pace__value').textContent = calcPace;\n    } else {\n      if (\n        !isInputValid(+inputDistance.value, +inputDuration.value, +inputElevation.value) ||\n        !isPositive(+inputDistance.value, +inputDuration.value)\n      )\n        return alert('Data needs to be positive numbers!');\n      work.distance = +inputDistance.value;\n      work.duration = +inputDuration.value;\n      work.elevationGain = +inputElevation.value;\n      const calcSpeed = Math.trunc(inputDistance.value / (inputDuration.value / 60));\n      work.speed = calcSpeed;\n      html.querySelector('.elevationGain__value').textContent = inputElevation.value;\n      html.querySelector('.speed__value').textContent = calcSpeed;\n    }\n\n    this.#htmlContent[this.#index] = html.outerHTML;\n\n    workoutsList.innerHTML = '';\n    this.#htmlContent.slice().forEach(html => {\n      workoutsList.insertAdjacentHTML('afterbegin', html);\n    });\n\n    this._hideForm();\n\n    this._toggleEditing(false);\n\n    this._indexDelegation();\n\n    this._setLocalStorage();\n  }\n\n  // Local storage\n  _setLocalStorage() {\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n  }\n\n  _getLocalStorage() {\n    this.#data = JSON.parse(localStorage.getItem('workouts'));\n\n    if (!this.#data) return;\n\n    this.#data.map(data => {\n      if (data.type === 'running') Object.setPrototypeOf(data, Running.prototype);\n      if (data.type === 'cycling') Object.setPrototypeOf(data, Cycling.prototype);\n    });\n\n    this.#workouts = this.#data;\n    console.log(this.#workouts);\n\n    this.#workouts.forEach(work => this._renderWorkout(work));\n  }\n\n  _showClearAll() {\n    this.#workouts.length >= 1\n      ? clearAll.classList.remove('clear__all--hidden')\n      : clearAll.classList.add('clear__all--hidden');\n  }\n\n  // Clear local storage data\n  _clearWorkouts() {\n    localStorage.clear();\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}